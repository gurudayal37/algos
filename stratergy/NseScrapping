from dhanhq import dhanhq
import pandas as pd
import time

# Initialize Dhan client
client_id = "1105681493"
access_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJkaGFuIiwicGFydG5lcklkIjoiIiwiZXhwIjoxNzQ4NzE5OTUzLCJ0b2tlbkNvbnN1bWVyVHlwZSI6IlNFTEYiLCJ3ZWJob29rVXJsIjoiIiwiZGhhbkNsaWVudElkIjoiMTEwNTY4MTQ5MyJ9.fleP-yNa08YkT6Eh-1V6aDQv9cZNSEIpfDWieCZo4CDiup0r56-ycdq7JFabiKwaiM8j2YdZGM2yFOK8-04lcQ"
dhan = dhanhq(client_id, access_token)

def get_spot_and_future_price(symbol):
    try:
        # Get spot price using quote_data
        spot_data = dhan.quote_data({"NSE_EQ": [symbol]})
        if spot_data['status'] != 'success':
            raise Exception("Failed to fetch spot data")
        spot_price = float(spot_data['data']['NSE_EQ'][symbol]['lastTradedPrice'])
        
        # Get futures data
        fut_data = dhan.quote_data({"NSE_FNO": [symbol]})
        if fut_data['status'] != 'success':
            raise Exception("Failed to fetch futures data")
            
        # Get nearest expiry future
        fut_price = float(fut_data['data']['NSE_FNO'][symbol]['lastTradedPrice'])
        expiry = fut_data['data']['NSE_FNO'][symbol]['expiryDate']
        
        return spot_price, fut_price, expiry
    except Exception as e:
        raise Exception(f"Error fetching data: {str(e)}")

def main():
    stocks = ["RELIANCE", "HDFCBANK", "INFY", "TCS"]
    results = []

    for symbol in stocks:
        try:
            print(f"Fetching data for {symbol}...")
            spot, future, expiry = get_spot_and_future_price(symbol)
            gap = future - spot
            results.append({
                "stock": symbol,
                "spot": spot,
                "future": future,
                "gap": gap,
                "expiry": expiry
            })
            print(f"Successfully fetched {symbol}")
            time.sleep(1)  # Delay between stocks
        except Exception as e:
            print(f"Error fetching {symbol}: {e}")

    if results:
        df = pd.DataFrame(results).sort_values(by="gap", ascending=False)
        print("\nResults:")
        print("="*60)
        print(df)
    else:
        print("No data was successfully fetched")

if __name__ == "__main__":
    main()
